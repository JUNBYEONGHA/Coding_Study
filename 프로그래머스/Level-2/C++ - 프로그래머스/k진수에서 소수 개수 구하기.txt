#include <string>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

char number[10] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9',};

bool isprime(long long n)
{
    if (n < 2) return false;
    for (int i = 2 ; i <= sqrt(n); i++)
    {
        if(n % i == 0) return false;
    }
    return true;
}

string number_to_n(int num, int n){
    string result;
    if(num == 0){
        return "0";
    }
    while(num > 0){
        result += number[num % n];
        num /= n;
    }
    reverse(result.begin(), result.end());
    return result;
}

int solution(int n, int k) {
    int answer = 0;
    string numbers = number_to_n(n , k);
    string temp = "";
    for(int i = 0 ; i < numbers.size() ; i++)
    {
        if(numbers[i] != '0')
            temp += numbers[i];
        else
        {
            if(!temp.empty())
                if(isprime(stoll(temp)))
                    answer++;
            temp = "";
        }
    }
    if(!temp.empty())
        if(isprime(stoll(temp)))
            answer++;
    return answer;
}