#include <vector>

using namespace std;

bool map[100][100];
int dr[4] = {-1,1,0,0};
int dc[4] = {0,0,-1,1};
int cnt , M , N ;

void DFS(int m , int n , vector<vector<int>> picture)
{
    map[m][n] = true;
    cnt ++;
    for(int i = 0 ; i < 4 ; i++ )
    {
        int nr = m + dr[i];
        int nc = n + dc[i];
        if(nr >= 0 && nc >= 0 && nr < M && nc < N)
        {
            if(!map[nr][nc] && picture[nr][nc] == picture[m][n])
            {
                DFS(nr,nc,picture);
            }
        }
    }
}

// 전역 변수를 정의할 경우 함수 내에 초기화 코드를 꼭 작성해주세요.
vector<int> solution(int m, int n, vector<vector<int>> picture) {
    for(int i = 0 ; i < m;i++)
    {
        for(int j = 0 ; j < n; j++)
        {
            map[i][j] = false;
        }
    }
    int number_of_area = 0;
    int max_size_of_one_area = 0;
    M = m;
    N = n;
    for(int i = 0 ; i < m ; i++ )
    {
        for(int j = 0 ; j < n ; j++ )
        {
            if(picture[i][j] && !map[i][j])
            {
                number_of_area ++;
                cnt = 0;
                DFS(i,j,picture);
                max_size_of_one_area = max(cnt , max_size_of_one_area);
            }
        }
    }
    
    vector<int> answer(2);
    answer[0] = number_of_area;
    answer[1] = max_size_of_one_area;
    return answer;
}